//region Startup Plugins

apply plugin: "com.android.application"
apply plugin: "kotlin-android"

//endregion

//region Android

android {

  //region Build Configuration

  signingConfigs {
    debug {
      keyAlias = "androiddebugkey"
      keyPassword = "android"
      storePassword = "android"
      storeFile = rootProject.file("settings/keystore/debug.jks")
    }
    release {
      keyAlias = "todo"
      keyPassword = "todo"
      storePassword = "todo"
      storeFile = rootProject.file("settings/keystore/release.jks")
    }
  }

  buildTypes {
    debug {
      minifyEnabled = false
    }
    release {
      minifyEnabled true
      proguardFiles getDefaultProguardFile("proguard-android.txt"),
          rootProject.file("settings/proguard/proguard-rules.pro")
    }
  }

  //endregion

  //region Compile Options

  compileSdkVersion deps.build_versions.compile_sdk

  compileOptions {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
  }

  //endregion

  //region Default Config

  defaultConfig {
    dimension "type"
    minSdkVersion deps.build_versions.min_sdk
    targetSdkVersion deps.build_versions.target_sdk
  }

  //endregion

  //region Flavor Dimensions

  flavorDimensions "type"

  //endregion

  //region Gradle Properties

  // TODO:

  //endregion

  //region Kotlin Options

  kotlinOptions {
    jvmTarget = JavaVersion.VERSION_1_8
  }

  //endregion

  //region Product Flavors

  productFlavors {
    dev {
      applicationIdSuffix = ".dev"
      dimension = "type"
      resValue "string", "app_name", getProjectName() + " Development"
      versionCode = getAutoVersionCode()
      versionName = getAutoVersionName() + " (dev)"
    }
    prod {
      dimension = "type"
      resValue "string", "app_name", getProjectName()
      versionCode = getAutoVersionCode()
      versionName = getAutoVersionName()
    }
    stage {
      applicationIdSuffix = ".stage"
      dimension = "type"
      resValue "string", "app_name", getProjectName() + " Stage"
      versionCode = getAutoVersionCode()
      versionName = getAutoVersionName() + " (stage)"
    }

    // Print version code and name.
    printf("\n---------- VERSION DATA ----------\n")
    printf("-> CODE: ${getAutoVersionCode()}\n")
    printf("-> NAME: ${getAutoVersionName()}")
    printf("\n----------------------------------\n")
  }

  //endregion
}

//endregion

//region Configurations

configurations { natives }

//endregion

//region Dependencies

dependencies {

  //region Application Files

  implementation fileTree(dir: "libs", include: ["*.jar", "*.aar"])

  //endregion

  //region Game Engine

  implementation deps.gdx.backend_android
  implementation deps.gdx.engine
  natives deps.gdx.platform_arm64_v8a
  natives deps.gdx.platform_armeabi
  natives deps.gdx.platform_armeabi_v7a
  natives deps.gdx.platform_x86
  natives deps.gdx.platform_x86_64
  implementation deps.ktx.app
  implementation deps.ktx.assets
  implementation deps.ktx.math

  //endregion

  //region Kotlin

  implementation deps.kotlin.stdlib_jdk8

  //endregion
}

//endregion
